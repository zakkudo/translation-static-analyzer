{
  "name": "@zakkudo/translation-static-analyzer",
  "version": "0.3.0",
  "description": "A library for generating localization files using static analysis of source files similar to gettext with code splitting",
  "keywords": [
    "gettext",
    "i18n",
    "internationalization",
    "l10n",
    "localization",
    "localize",
    "translate",
    "translation",
    "code splitting"
  ],
  "main": "index.js",
  "files": [
    "*"
  ],
  "bin": {
    "update-translations": "update-translations.js"
  },
  "engines": {
    "node": ">=8.0.0"
  },
  "repository": "github:zakkudo/translation-static-analyzer",
  "license": "BSD-3-Clause",
  "devDependencies": {
    "@babel/cli": "^7.14.8",
    "@babel/core": "^7.14.8",
    "@babel/plugin-transform-classes": "^7.14.5",
    "@babel/plugin-transform-runtime": "^7.14.5",
    "@babel/preset-env": "^7.14.8",
    "@babel/preset-typescript": "^7.14.5",
    "@jest/types": "^27.0.6",
    "@types/jest": "^26.0.24",
    "@typescript-eslint/eslint-plugin": "^4.28.4",
    "@typescript-eslint/parser": "^4.28.4",
    "babel-core": "^7.0.0-0",
    "babel-jest": "^27.0.6",
    "babel-plugin-transform-define": "^2.0.0",
    "babel-plugin-transform-undefined-to-void": "^6.9.4",
    "eslint": "^7.31.0",
    "eslint-config-prettier": "^8.3.0",
    "eslint-plugin-jasmine": "^4.1.2",
    "eslint-plugin-jest": "^24.4.0",
    "eslint-plugin-json": "^3.0.0",
    "eslint-plugin-node": "^11.1.0",
    "eslint-plugin-tsdoc": "^0.2.14",
    "jest": "^27.0.6",
    "jest-cli": "^27.0.6",
    "jsdoc": "^3.6.7",
    "jsdoc-to-markdown": "^7.0.1",
    "pre-commit": "^1.2.2",
    "ts-jest": "^27.0.4",
    "typedoc": "^0.21.4",
    "typedoc-plugin-markdown": "^3.10.4",
    "typescript": "^4.3.5"
  },
  "dependencies": {
    "@babel/runtime-corejs2": "^7.14.8",
    "@types/glob": "^7.1.4",
    "@zakkudo/argument-parser": "0.0.1",
    "chokidar": "^3.5.2",
    "deep-equal": "^2.0.5",
    "fs-extra": "^10.0.0",
    "glob": "^7.1.7",
    "json5": "^2.2.0",
    "prettier": "^2.3.2",
    "safe-eval": "^0.4.1"
  },
  "scripts": {
    "build": "scripts/build.sh",
    "clean": "scripts/clean.sh",
    "cover": "scripts/cover.sh",
    "deploy": "scripts/deploy.sh",
    "document": "scripts/document.sh",
    "lint": "scripts/lint.sh",
    "test": "scripts/test.sh",
    "format": "scripts/format.mjs"
  },
  "pre-commit": [
    "format"
  ]
}
